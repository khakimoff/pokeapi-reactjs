{"version":3,"sources":["components/Card.js","components/List.js","Data/genetateKey.js","components/Detail.js","components/Abilities.js","App.js","serviceWorker.js","index.js"],"names":["Card","name","url","index","split","length","urlImg","to","className","src","alt","List","useState","filterText","setFilterText","items","setItems","useEffect","a","axios","result","data","results","fetchData","filteredItems","filter","item","toLocaleLowerCase","includes","itemsToDisplay","type","placeholder","value","onChange","e","target","map","generateKey","pre","Date","getTime","Detail","imageUrl","setImageUrl","setName","abilities","setAbilities","stats","setStats","weight","setWeight","height","setHeight","types","setType","id","setId","history","useHistory","match","useRouteMatch","pokemonIndex","params","sprites","front_default","onClick","goBack","key","stat","base_stat","ability","Abilities","effect","setEffect","abilitiesIndex","effect_entries","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"qUAGaA,EAAO,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,KAAMC,EAAU,EAAVA,IACrBC,EAAQD,EAAIE,MAAM,KAAKF,EAAIE,MAAM,KAAKC,OAAS,GAC/CC,EAAM,wDAAoDH,EAApD,QAEZ,OACE,oCACE,kBAAC,IAAD,CAAMI,GAAE,WAAMN,IACZ,yBAAKO,UAAU,aACb,yBAAKA,UAAU,yBACb,sCAAcL,GACd,wCAAgBF,IAElB,yBAAKQ,IAAKH,EAAQI,IAAKT,QCVpBU,EAAO,WAAO,IAAD,EACYC,mBAAS,IADrB,mBACjBC,EADiB,KACLC,EADK,OAEEF,mBAAS,IAFX,mBAEjBG,EAFiB,KAEVC,EAFU,KAIxBC,qBAAU,YACO,uCAAG,4BAAAC,EAAA,sEACKC,IAAM,8CADX,OACVC,EADU,OAEhBJ,EAASI,EAAOC,KAAKC,SAFL,2CAAH,qDAIfC,KACC,IAEH,IAAMC,EAAgBT,EAAMU,QAAO,SAACC,GAAD,OACjCA,EAAKzB,KAAK0B,oBAAoBC,SAASf,MAGnCgB,EAAiBhB,EAAaW,EAAgBT,EAEpD,OACE,oCACE,yBAAKP,UAAU,YACb,8CACA,2BACEsB,KAAK,OACLC,YAAY,OACZC,MAAOnB,EACPoB,SAAU,SAACC,GAAD,OAAOpB,EAAcoB,EAAEC,OAAOH,MAAML,yBAGlD,6BACCE,EAAeO,KAAI,SAACV,GAAD,OAClB,kBAAC,EAAD,CAAMzB,KAAMyB,EAAKzB,KAAMC,IAAKwB,EAAKxB,WCpC5BmC,EAAc,SAACC,GAC1B,MAAM,GAAN,OAAUA,EAAV,aAAiB,IAAIC,MAAOC,YCMjBC,EAAS,WAAO,IAAD,EACM7B,mBAAS,IADf,mBACnB8B,EADmB,KACTC,EADS,OAEF/B,mBAAS,IAFP,mBAEnBX,EAFmB,KAEb2C,EAFa,OAGQhC,mBAAS,IAHjB,mBAGnBiC,EAHmB,KAGRC,EAHQ,OAIAlC,mBAAS,IAJT,mBAInBmC,EAJmB,KAIZC,EAJY,OAKEpC,mBAAS,IALX,mBAKnBqC,EALmB,KAKXC,EALW,OAMEtC,mBAAS,IANX,mBAMnBuC,EANmB,KAMXC,EANW,OAODxC,mBAAS,IAPR,mBAOnByC,EAPmB,KAOZC,EAPY,OAQN1C,mBAAS,IARH,mBAQnB2C,EARmB,KAQfC,EARe,KAUtBC,EAAUC,cACVC,EAAQC,cACJC,EAAiBF,EAAMG,OAAvBD,aAmBR,OAjBA5C,qBAAU,YACO,uCAAG,4BAAAC,EAAA,sEACKC,IAAM,qCAAD,OACa0C,IAFvB,OACVzC,EADU,OAIhBwB,EAAQxB,EAAOC,KAAKpB,MACpB0C,EAAYvB,EAAOC,KAAK0C,QAAQC,eAChClB,EAAa1B,EAAOC,KAAKwB,WACzBG,EAAS5B,EAAOC,KAAK0B,OACrBK,EAAUhC,EAAOC,KAAK8B,QACtBD,EAAU9B,EAAOC,KAAK4B,QACtBK,EAAQlC,EAAOC,KAAKgC,OACpBG,EAAMpC,EAAOC,KAAKkC,IAXF,4CAAH,qDAafhC,KACC,IAGD,oCACE,4BAAQ0C,QAAS,kBAAMR,EAAQS,WAA/B,WACA,yBAAK1D,UAAU,WACb,yBAAKA,UAAU,gBACb,yBAAKC,IAAKiC,EAAUhC,IAAKT,KAE3B,yBAAKO,UAAU,gBACb,oDACA,2BACE,oCADF,OACqBP,GAErB,2BACE,kCADF,OACmBsD,GAEnB,2BACE,sCADF,OACuBJ,GAEvB,2BACE,sCADF,OACuBF,GAEvB,yBAAKzC,UAAU,2BACb,2BACE,sCAEF,4BACG6C,EAAMjB,KAAI,SAACV,GAAD,OACT,wBAAIyC,IAAK9B,EAAYX,EAAKI,KAAK7B,OAAQyB,EAAKI,KAAK7B,YAKzD,yBAAKO,UAAU,gBACb,qCACA,4BACGuC,EAAMX,KAAI,SAACV,GAAD,OACT,wBAAIyC,IAAK9B,EAAYX,EAAK0C,KAAKnE,OAC7B,2BAAIyB,EAAK0C,KAAKnE,KAAd,KADF,OACiCyB,EAAK2C,gBAK5C,yBAAK7D,UAAU,gBACb,yCACA,4BACGqC,EAAUT,KAAI,SAACV,GAAD,OACb,wBAAIyC,IAAK9B,EAAYX,EAAK4C,QAAQrE,OAChC,kBAAC,IAAD,CACEM,GAAE,UAAKoD,EAAMzD,IAAX,YAAkBwB,EAAK4C,QAAQrE,MACjCO,UAAU,qBAETkB,EAAK4C,QAAQrE,eCrFnBsE,EAAY,WAAO,IAAD,EACD3D,mBAAS,IADR,mBACtB4D,EADsB,KACdC,EADc,KAGzBhB,EAAUC,cAENgB,EADId,cACqBE,OAAzBY,eAYR,OAVAzD,qBAAU,YACO,uCAAG,4BAAAC,EAAA,sEACKC,IAAM,qCAAD,OACauD,EADb,MADV,OACVtD,EADU,OAIhBqD,EAAUrD,EAAOC,KAAKsD,eAAe,GAAGH,QAJxB,2CAAH,qDAMfjD,KACC,IAGD,oCACE,4BAAQ0C,QAAS,kBAAMR,EAAQS,WAA/B,WACA,2BACE,kDAEF,2BAAIM,KCDKI,MAlBf,WACE,OACE,kBAAC,IAAD,KACE,yBAAKpE,UAAU,aACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOqE,OAAK,EAACC,KAAK,IAAIC,UAAWpE,IACjC,kBAAC,IAAD,CAAOkE,OAAK,EAACC,KAAK,iBAAiBC,UAAWtC,IAC9C,kBAAC,IAAD,CACEoC,OAAK,EACLC,KAAK,iCACLC,UAAWR,QCNHS,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASxB,MACvB,2DCZNyB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.3d17aaae.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport const Card = ({ name, url }) => {\n  const index = url.split(\"/\")[url.split(\"/\").length - 2];\n  const urlImg = `https://pokeres.bastionbot.org/images/pokemon/${index}.png`;\n\n  return (\n    <>\n      <Link to={`/${name}`}>\n        <div className=\"list_card\">\n          <div className=\"list_card--wrappTitle\">\n            <h2>Id:&nbsp;{index}</h2>\n            <h2>Name:&nbsp;{name}</h2>\n          </div>\n          <img src={urlImg} alt={name} />\n        </div>\n      </Link>\n    </>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nimport { Card } from \"./Card\";\n\nexport const List = () => {\n  const [filterText, setFilterText] = useState(\"\");\n  const [items, setItems] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await axios(\"https://pokeapi.co/api/v2/pokemon?limit=30\");\n      setItems(result.data.results);\n    };\n    fetchData();\n  }, []);\n\n  const filteredItems = items.filter((item) =>\n    item.name.toLocaleLowerCase().includes(filterText)\n  );\n\n  const itemsToDisplay = filterText ? filteredItems : items;\n\n  return (\n    <>\n      <div className=\"list_top\">\n        <h1>Pokemon search</h1>\n        <input\n          type=\"text\"\n          placeholder=\"Name\"\n          value={filterText}\n          onChange={(e) => setFilterText(e.target.value.toLocaleLowerCase())}\n        />\n      </div>\n      <hr />\n      {itemsToDisplay.map((item) => (\n        <Card name={item.name} url={item.url} />\n      ))}\n    </>\n  );\n};\n","export const generateKey = (pre) => {\n  return `${pre}_${new Date().getTime()}`;\n};\n","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useRouteMatch, useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\n\nimport { generateKey } from \"../Data/genetateKey\";\n\nexport const Detail = () => {\n  const [imageUrl, setImageUrl] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [abilities, setAbilities] = useState([]);\n  const [stats, setStats] = useState([]);\n  const [weight, setWeight] = useState(\"\");\n  const [height, setHeight] = useState(\"\");\n  const [types, setType] = useState([]);\n  const [id, setId] = useState(\"\");\n\n  let history = useHistory();\n  let match = useRouteMatch();\n  const { pokemonIndex } = match.params;\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await axios(\n        `https://pokeapi.co/api/v2/pokemon/${pokemonIndex}`\n      );\n      setName(result.data.name);\n      setImageUrl(result.data.sprites.front_default);\n      setAbilities(result.data.abilities);\n      setStats(result.data.stats);\n      setHeight(result.data.height);\n      setWeight(result.data.weight);\n      setType(result.data.types);\n      setId(result.data.id);\n    };\n    fetchData();\n  }, []);\n\n  return (\n    <>\n      <button onClick={() => history.goBack()}>Go back</button>\n      <div className=\"details\">\n        <div className=\"details_item\">\n          <img src={imageUrl} alt={name} />\n        </div>\n        <div className=\"details_item\">\n          <h3>Main characteristics</h3>\n          <p>\n            <b>Name:</b>&nbsp;{name}\n          </p>\n          <p>\n            <b>ID:</b>&nbsp;{id}\n          </p>\n          <p>\n            <b>Height:</b>&nbsp;{height}\n          </p>\n          <p>\n            <b>Weight:</b>&nbsp;{weight}\n          </p>\n          <div className=\"details_item--wrappList\">\n            <p>\n              <b>Types:</b>\n            </p>\n            <ul>\n              {types.map((item) => (\n                <li key={generateKey(item.type.name)}>{item.type.name}</li>\n              ))}\n            </ul>\n          </div>\n        </div>\n        <div className=\"details_item\">\n          <h3>Stats</h3>\n          <ul>\n            {stats.map((item) => (\n              <li key={generateKey(item.stat.name)}>\n                <b>{item.stat.name}:</b>&nbsp;{item.base_stat}\n              </li>\n            ))}\n          </ul>\n        </div>\n        <div className=\"details_item\">\n          <h3>Abilities</h3>\n          <ul>\n            {abilities.map((item) => (\n              <li key={generateKey(item.ability.name)}>\n                <Link\n                  to={`${match.url}/${item.ability.name}`}\n                  className=\"details_item_link\"\n                >\n                  {item.ability.name}\n                </Link>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    </>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { useRouteMatch, useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\n\nexport const Abilities = () => {\n  const [effect, setEffect] = useState(\"\");\n\n  let history = useHistory();\n  let match = useRouteMatch();\n  const { abilitiesIndex } = match.params;\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await axios(\n        `https://pokeapi.co/api/v2/ability/${abilitiesIndex}/`\n      );\n      setEffect(result.data.effect_entries[1].effect);\n    };\n    fetchData();\n  }, []);\n\n  return (\n    <>\n      <button onClick={() => history.goBack()}>Go back</button>\n      <p>\n        <b>Effect Description</b>\n      </p>\n      <p>{effect}</p>\n    </>\n  );\n};\n","import React from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\n\nimport { List } from \"./components/List\";\nimport { Detail } from \"./components/Detail\";\nimport { Abilities } from \"./components/Abilities\";\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"container\">\n        <Switch>\n          <Route exact path=\"/\" component={List} />\n          <Route exact path=\"/:pokemonIndex\" component={Detail} />\n          <Route\n            exact\n            path=\"/:pokemonIndex/:abilitiesIndex\"\n            component={Abilities}\n          />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}